/**
 *  naken_asm assembler.
 *  Author: Michael Kohn
 *   Email: mike@mikekohn.net
 *     Web: http://www.mikekohn.net/
 * License: GPLv3
 *
 * Copyright 2010-2019 by Michael Kohn
 *
 */

#ifndef NAKEN_ASM_TABLE_AVR8_H
#define NAKEN_ASM_TABLE_AVR8_H

#include "common/assembler.h"

enum
{
  OP_NONE,
  OP_BRANCH_S_K,
  OP_BRANCH_K,
  OP_TWO_REG,
  OP_REG_IMM,
  OP_ONE_REG,
  OP_REG_BIT,
  OP_REG_IMM_WORD,
  OP_IOREG_BIT,
  OP_SREG_BIT,
  OP_REG_4,
  OP_IN,
  OP_OUT,
  OP_MOVW,
  OP_RELATIVE,
  OP_JUMP,
  OP_SPM_Z_PLUS,
  OP_REG_X,
  OP_REG_Y,
  OP_REG_Z,
  OP_REG_X_PLUS,
  OP_REG_Y_PLUS,
  OP_REG_Z_PLUS,
  OP_REG_MINUS_X,
  OP_REG_MINUS_Y,
  OP_REG_MINUS_Z,
  OP_X_REG,
  OP_Y_REG,
  OP_Z_REG,
  OP_X_PLUS_REG,
  OP_Y_PLUS_REG,
  OP_Z_PLUS_REG,
  OP_MINUS_X_REG,
  OP_MINUS_Y_REG,
  OP_MINUS_Z_REG,
  OP_FMUL,
  OP_MUL,
  OP_MULS,
  OP_DATA4,
  OP_REG_SRAM,
  OP_SRAM_REG,
  OP_REG_Y_PLUS_Q,
  OP_REG_Z_PLUS_Q,
  OP_Y_PLUS_Q_REG,
  OP_Z_PLUS_Q_REG,
};

enum
{
  AVR8_ADC,
  AVR8_ADD,
  AVR8_ADIW,
  AVR8_AND,
  AVR8_ANDI,
  AVR8_ASR,
  AVR8_BCLR,
  AVR8_BLD,
  AVR8_BRBC,
  AVR8_BRBS,
  AVR8_BRCC,
  AVR8_BRCS,
  AVR8_BREAK,
  AVR8_BREQ,
  AVR8_BRGE,
  AVR8_BRHC,
  AVR8_BRHS,
  AVR8_BRID,
  AVR8_BRIE,
  AVR8_BRLO,
  AVR8_BRLT,
  AVR8_BRMI,
  AVR8_BRNE,
  AVR8_BRPL,
  AVR8_BRSH,
  AVR8_BRTC,
  AVR8_BRTS,
  AVR8_BRVC,
  AVR8_BRVS,
  AVR8_BSET,
  AVR8_BST,
  AVR8_CALL,
  AVR8_CBI,
  AVR8_CBR,
  AVR8_CLC,
  AVR8_CLH,
  AVR8_CLI,
  AVR8_CLN,
  AVR8_CLR,
  AVR8_CLS,
  AVR8_CLT,
  AVR8_CLV,
  AVR8_CLZ,
  AVR8_COM,
  AVR8_CP,
  AVR8_CPC,
  AVR8_CPI,
  AVR8_CPSE,
  AVR8_DEC,
  AVR8_DES,
  AVR8_EICALL,
  AVR8_EIJMP,
  AVR8_ELPM,
  AVR8_EOR,
  AVR8_FMUL,
  AVR8_FMULS,
  AVR8_FMULSU,
  AVR8_ICALL,
  AVR8_IJMP,
  AVR8_IN,
  AVR8_INC,
  AVR8_JMP,
  AVR8_LD,
  AVR8_LDD,
  AVR8_LDI,
  AVR8_LDS,
  AVR8_LPM,
  AVR8_LSL,
  AVR8_LSR,
  AVR8_MOV,
  AVR8_MOVW,
  AVR8_MUL,
  AVR8_MULS,
  AVR8_MULSU,
  AVR8_NEG,
  AVR8_NOP,
  AVR8_OR,
  AVR8_ORI,
  AVR8_OUT,
  AVR8_POP,
  AVR8_PUSH,
  AVR8_RCALL,
  AVR8_RET,
  AVR8_RETI,
  AVR8_RJMP,
  AVR8_ROL,
  AVR8_ROR,
  AVR8_SBC,
  AVR8_SBCI,
  AVR8_SBI,
  AVR8_SBIC,
  AVR8_SBIS,
  AVR8_SBIW,
  AVR8_SBR,
  AVR8_SBRC,
  AVR8_SBRS,
  AVR8_SEC,
  AVR8_SEH,
  AVR8_SEI,
  AVR8_SEN,
  AVR8_SER,
  AVR8_SES,
  AVR8_SET,
  AVR8_SEV,
  AVR8_SEZ,
  AVR8_SLEEP,
  AVR8_SPM,
  AVR8_ST,
  AVR8_STD,
  AVR8_STS,
  AVR8_SUB,
  AVR8_SUBI,
  AVR8_SWAP,
  AVR8_TST,
  AVR8_WDR,
};

struct _table_avr8
{
  char *instr;
  uint16_t opcode;
  uint16_t mask;
  uint8_t type;
  char cycles_min;
  char cycles_max;
  uint8_t id;
};

extern struct _table_avr8 table_avr8[];

#endif


